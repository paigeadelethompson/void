name: "Void Linux"
on:
  schedule:
    - cron: "0 13 * * 1"  # Run every Monday at 13:00 UTC
  workflow_dispatch:      # Allow manual triggering

jobs:
  build-standard:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        libc: [glibc, musl]
        platform:
          - { arch: linux/amd64, tag: x86_64 }
          - { arch: linux/arm64, tag: aarch64 }
          - { arch: linux/arm/v7, tag: armv7l }
          - { arch: linux/arm/v6, tag: armv6l }
        include:
          - libc: glibc
            platform: { arch: linux/386, tag: i686 }
      fail-fast: false
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3
      
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Build and push Void Linux image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: ${{ matrix.platform.arch }}
          push: true
          build-args: |
            LIBC=${{ matrix.libc }}
            VARIANT=standard
            DATESTAMP=20250202
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/void:${{ matrix.platform.tag }}-${{ matrix.libc }}-20250202
            ${{ secrets.DOCKER_USERNAME }}/void:${{ matrix.platform.tag }}-${{ matrix.libc }}-latest

  build-rpi:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        libc: [glibc, musl]
        platform:
          - { arch: linux/arm64, tag: aarch64 }
          - { arch: linux/arm/v7, tag: armv7l }
          - { arch: linux/arm/v6, tag: armv6l }
      fail-fast: false
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3
      
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Build and push Void Linux Raspberry Pi image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: ${{ matrix.platform.arch }}
          push: true
          build-args: |
            LIBC=${{ matrix.libc }}
            VARIANT=rpi
            DATESTAMP=20250202
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/void:rpi-${{ matrix.platform.tag }}-${{ matrix.libc }}-20250202
            ${{ secrets.DOCKER_USERNAME }}/void:rpi-${{ matrix.platform.tag }}-${{ matrix.libc }}-latest

  build-multi-arch:
    needs: [build-standard, build-rpi]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        config:
          - { libc: glibc, platforms: "linux/amd64,linux/386,linux/arm64,linux/arm/v7,linux/arm/v6", tag: glibc }
          - { libc: musl, platforms: "linux/amd64,linux/arm64,linux/arm/v7,linux/arm/v6", tag: musl }
          - { libc: glibc, variant: rpi, platforms: "linux/arm64,linux/arm/v7,linux/arm/v6", tag: rpi-glibc }
          - { libc: musl, variant: rpi, platforms: "linux/arm64,linux/arm/v7,linux/arm/v6", tag: rpi-musl }
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3
      
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Build and push multi-arch image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: ${{ matrix.config.platforms }}
          push: true
          build-args: |
            LIBC=${{ matrix.config.libc }}
            VARIANT=${{ matrix.config.variant || 'standard' }}
            DATESTAMP=20250202
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/void:${{ matrix.config.tag }}-20250202
            ${{ secrets.DOCKER_USERNAME }}/void:${{ matrix.config.tag }}-latest
    
